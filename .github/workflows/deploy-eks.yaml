name: Deploy AWS Academy - EKS

on:
  workflow_run:
    workflows: [ "Java CI with Maven" ]
    types:
      - completed

env:
  REGION_DEFAULT: "us-east-1"
  CLUSTER_NAME: "frameFlow-eks-cluster"

jobs:
  deploy:
    name: Deploy AWS Academy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: AWS Configure
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update Kube Config
        run: aws eks update-kubeconfig --name ${{ env.CLUSTER_NAME }} --region ${{ env.REGION_DEFAULT }}

      - name: Package & Tag
        run: |
          docker compose -f Docker/docker-compose.yml build web --no-cache
          docker tag cutter-frame-flow:latest 090111931170.dkr.ecr.us-east-1.amazonaws.com/frameflow-ecr:latest
          docker ps

      - name: Push to ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 090111931170.dkr.ecr.us-east-1.amazonaws.com
          docker push 090111931170.dkr.ecr.us-east-1.amazonaws.com/frameflow-ecr:latest

      - name: Kube Secrets
        if: ${{ github.ref_name == 'master' }} && github.event_name == 'push'
        run: |
          kubectl delete secret cutter-secret-frameflow --ignore-not-found
          kubectl create secret generic cutter-secret-frameflow \
             --from-literal=S3_VIDEO_KEY_AWS="${{ secrets.S3_VIDEO_KEY_AWS }}" \
             --from-literal=S3_ZIP_KEY_AWS="${{ secrets.S3_ZIP_KEY_AWS }}" \
             --from-literal=SQS_KEY_AWS="${{ secrets.SQS_KEY_AWS }}" \
             --from-literal=SNS_KEY_AWS="${{ secrets.SNS_KEY_AWS }}" \
             --from-literal=AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" \
             --from-literal=AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
             --from-literal=AWS_SESSION_TOKEN=${{ secrets.AWS_SESSION_TOKEN }} \
             --from-literal=AWS_REGION=${{ secrets.AWS_REGION }}

      - name: Kube Apply
        if: ${{ github.ref_name == 'master' }} && github.event_name == 'push'
        run: |
          kubectl delete -f k8s/metrics.yaml --ignore-not-found
          kubectl apply -f k8s/deployment-cutter-frame-flow.yaml
          kubectl apply -f k8s/service-frame-flow.yaml
          kubectl apply -f k8s/hpa-frame-flow.yaml
